// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Olympiad_CodeFirst;

namespace Olympiad_CodeFirst.Migrations
{
    [DbContext(typeof(OlympiadContext))]
    partial class OlympiadContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Olympiad_CodeFirst.Models.Award", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MedalId")
                        .HasColumnType("int");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.Property<int>("SportsmanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedalId");

                    b.HasIndex("SportId");

                    b.HasIndex("SportsmanId");

                    b.ToTable("Awards");
                });

            modelBuilder.Entity("Olympiad_CodeFirst.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Olympiad_CodeFirst.Models.Medal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Place")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Medals");
                });

            modelBuilder.Entity("Olympiad_CodeFirst.Models.Sport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SportName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sports");
                });

            modelBuilder.Entity("Olympiad_CodeFirst.Models.SportsSportsmen", b =>
                {
                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.Property<int>("SportsmanId")
                        .HasColumnType("int");

                    b.HasKey("SportId", "SportsmanId");

                    b.HasIndex("SportsmanId");

                    b.ToTable("SportsSportsmen");
                });

            modelBuilder.Entity("Olympiad_CodeFirst.Models.Sportsman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Sportsmen");
                });

            modelBuilder.Entity("Olympiad_CodeFirst.Models.Award", b =>
                {
                    b.HasOne("Olympiad_CodeFirst.Models.Medal", "Medal")
                        .WithMany("Awards")
                        .HasForeignKey("MedalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Olympiad_CodeFirst.Models.Sport", "Sport")
                        .WithMany("Awards")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Olympiad_CodeFirst.Models.Sportsman", "Sportsman")
                        .WithMany("Awards")
                        .HasForeignKey("SportsmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medal");

                    b.Navigation("Sport");

                    b.Navigation("Sportsman");
                });

            modelBuilder.Entity("Olympiad_CodeFirst.Models.SportsSportsmen", b =>
                {
                    b.HasOne("Olympiad_CodeFirst.Models.Sport", "Sport")
                        .WithMany("SportsSportsmen")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Olympiad_CodeFirst.Models.Sportsman", "Sportsman")
                        .WithMany("SportsSportsmen")
                        .HasForeignKey("SportsmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sport");

                    b.Navigation("Sportsman");
                });

            modelBuilder.Entity("Olympiad_CodeFirst.Models.Sportsman", b =>
                {
                    b.HasOne("Olympiad_CodeFirst.Models.Country", "Country")
                        .WithMany("Sportsmen")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Olympiad_CodeFirst.Models.Country", b =>
                {
                    b.Navigation("Sportsmen");
                });

            modelBuilder.Entity("Olympiad_CodeFirst.Models.Medal", b =>
                {
                    b.Navigation("Awards");
                });

            modelBuilder.Entity("Olympiad_CodeFirst.Models.Sport", b =>
                {
                    b.Navigation("Awards");

                    b.Navigation("SportsSportsmen");
                });

            modelBuilder.Entity("Olympiad_CodeFirst.Models.Sportsman", b =>
                {
                    b.Navigation("Awards");

                    b.Navigation("SportsSportsmen");
                });
#pragma warning restore 612, 618
        }
    }
}
